# Generated by Django 5.2.4 on 2025-07-24 15:00

import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('lobiko', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='ActeMedical',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nom', models.CharField(max_length=200)),
                ('code', models.CharField(max_length=20, unique=True)),
                ('categorie', models.CharField(choices=[('BIOLOGIE', 'Analyses biologiques'), ('IMAGERIE', 'Imagerie médicale'), ('CARDIOLOGIE', 'Examens cardiologiques'), ('PNEUMOLOGIE', 'Examens pneumologiques'), ('NEUROLOGIE', 'Examens neurologiques'), ('GYNECOLOGIE', 'Examens gynécologiques'), ('UROLOGIE', 'Examens urologiques'), ('DERMATOLOGIE', 'Examens dermatologiques'), ('OPHTALMOLOGIE', 'Examens ophtalmologiques'), ('ORL', 'Examens ORL'), ('AUTRE', 'Autre')], max_length=20)),
                ('description', models.TextField(blank=True)),
                ('preparation_requise', models.TextField(blank=True)),
                ('duree_estimee', models.CharField(blank=True, max_length=100)),
                ('prix', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('disponible', models.BooleanField(default=True)),
                ('date_creation', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'verbose_name': 'Acte médical',
                'verbose_name_plural': 'Actes médicaux',
                'ordering': ['categorie', 'nom'],
            },
        ),
        migrations.CreateModel(
            name='HistoriqueVerification',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('numero_document', models.CharField(max_length=50)),
                ('type_document', models.CharField(max_length=50)),
                ('date_verification', models.DateTimeField(auto_now_add=True)),
                ('resultat_verification', models.BooleanField()),
                ('message', models.TextField()),
                ('ip_verification', models.GenericIPAddressField(blank=True, null=True)),
            ],
            options={
                'verbose_name': 'Historique de vérification',
                'verbose_name_plural': 'Historiques de vérifications',
            },
        ),
        migrations.CreateModel(
            name='ProduitPharmaceutique',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nom_commercial', models.CharField(max_length=200)),
                ('principe_actif', models.CharField(max_length=200)),
                ('dosage', models.CharField(max_length=100)),
                ('forme', models.CharField(choices=[('comprime', 'Comprimé'), ('gelule', 'Gélule'), ('sirop', 'Sirop'), ('injection', 'Injection'), ('pommade', 'Pommade'), ('gouttes', 'Gouttes'), ('suppositoire', 'Suppositoire'), ('autre', 'Autre')], max_length=20)),
                ('laboratoire', models.CharField(blank=True, max_length=200)),
                ('posologie_adulte', models.TextField(blank=True)),
                ('posologie_enfant', models.TextField(blank=True)),
                ('duree_traitement_standard', models.CharField(blank=True, max_length=100)),
                ('contre_indications', models.TextField(blank=True)),
                ('effets_secondaires', models.TextField(blank=True)),
                ('interactions', models.TextField(blank=True)),
                ('prix_unitaire', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('disponible', models.BooleanField(default=True)),
                ('date_creation', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'verbose_name': 'Produit pharmaceutique',
                'verbose_name_plural': 'Produits pharmaceutiques',
                'ordering': ['nom_commercial'],
            },
        ),
        migrations.CreateModel(
            name='BonExamen',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('numero_unique', models.CharField(editable=False, max_length=50, unique=True)),
                ('date_prescription', models.DateTimeField(auto_now_add=True)),
                ('date_validite', models.DateField(help_text='Date limite de validité')),
                ('statut', models.CharField(choices=[('actif', 'Actif'), ('utilise', 'Utilisé'), ('annule', 'Annulé'), ('expire', 'Expiré')], default='actif', max_length=10)),
                ('qr_code', models.ImageField(blank=True, upload_to='qr_codes/')),
                ('hash_verification', models.CharField(editable=False, max_length=64)),
                ('notes', models.TextField(blank=True, help_text='Notes additionnelles')),
                ('date_modification', models.DateTimeField(auto_now=True)),
                ('envoye_whatsapp', models.BooleanField(default=False)),
                ('date_envoi_whatsapp', models.DateTimeField(blank=True, null=True)),
                ('message_whatsapp_id', models.CharField(blank=True, max_length=100)),
                ('motif', models.TextField(help_text='Motif des examens demandés')),
                ('diagnostic_provisoire', models.TextField(blank=True, help_text='Diagnostic provisoire')),
                ('renseignements_cliniques', models.TextField(blank=True, help_text='Renseignements cliniques pertinents')),
                ('instructions_preparation', models.TextField(blank=True, help_text='Instructions de préparation pour le patient')),
                ('priorite', models.CharField(choices=[('NORMAL', 'Normal'), ('URGENT', 'Urgent'), ('TRES_URGENT', 'Très urgent')], default='NORMAL', max_length=20)),
                ('delai_realisation', models.CharField(blank=True, help_text='Délai souhaité pour la réalisation', max_length=100)),
                ('medecin', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='lobiko.medecin')),
                ('patient', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='lobiko.patient')),
                ('session_discussion', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='lobiko.sessiondiscussion')),
            ],
            options={
                'verbose_name': "Bon d'examen",
                'verbose_name_plural': "Bons d'examens",
            },
        ),
        migrations.CreateModel(
            name='ExamenPrescrit',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('localisation', models.CharField(blank=True, help_text='Localisation spécifique (ex: genou droit)', max_length=200)),
                ('instructions_specifiques', models.TextField(blank=True, help_text='Instructions spécifiques pour cet examen')),
                ('preparation_specifique', models.TextField(blank=True, help_text='Préparation spécifique requise')),
                ('urgent', models.BooleanField(default=False, help_text='Examen urgent')),
                ('acte', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='lobiko.actemedical')),
                ('bon_examen', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='examens', to='lobiko.bonexamen')),
            ],
            options={
                'verbose_name': 'Examen prescrit',
                'verbose_name_plural': 'Examens prescrits',
            },
        ),
        migrations.CreateModel(
            name='Ordonnance',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('numero_unique', models.CharField(editable=False, max_length=50, unique=True)),
                ('date_prescription', models.DateTimeField(auto_now_add=True)),
                ('date_validite', models.DateField(help_text='Date limite de validité')),
                ('statut', models.CharField(choices=[('actif', 'Actif'), ('utilise', 'Utilisé'), ('annule', 'Annulé'), ('expire', 'Expiré')], default='actif', max_length=10)),
                ('qr_code', models.ImageField(blank=True, upload_to='qr_codes/')),
                ('hash_verification', models.CharField(editable=False, max_length=64)),
                ('notes', models.TextField(blank=True, help_text='Notes additionnelles')),
                ('date_modification', models.DateTimeField(auto_now=True)),
                ('envoye_whatsapp', models.BooleanField(default=False)),
                ('date_envoi_whatsapp', models.DateTimeField(blank=True, null=True)),
                ('message_whatsapp_id', models.CharField(blank=True, max_length=100)),
                ('diagnostic', models.TextField(help_text='Diagnostic principal')),
                ('motif_prescription', models.TextField(blank=True, help_text='Motif de la prescription')),
                ('instructions_generales', models.TextField(blank=True, help_text='Instructions générales pour le patient')),
                ('instructions_pharmacien', models.TextField(blank=True, help_text='Instructions spéciales pour le pharmacien')),
                ('renouvellement_autorise', models.BooleanField(default=False)),
                ('nombre_renouvellements', models.PositiveIntegerField(default=0)),
                ('medecin', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='lobiko.medecin')),
                ('patient', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='lobiko.patient')),
                ('session_discussion', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='lobiko.sessiondiscussion')),
            ],
            options={
                'verbose_name': 'Ordonnance',
                'verbose_name_plural': 'Ordonnances',
            },
        ),
        migrations.CreateModel(
            name='MessagePrescription',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('type_prescription', models.CharField(choices=[('ordonnance', 'Ordonnance'), ('bon_examen', "Bon d'examen")], max_length=20)),
                ('message_whatsapp_id', models.CharField(blank=True, max_length=100)),
                ('pdf_url', models.URLField(blank=True)),
                ('date_envoi', models.DateTimeField(auto_now_add=True)),
                ('envoye_avec_succes', models.BooleanField(default=False)),
                ('bon_examen', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='lobiko.bonexamen')),
                ('session_discussion', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='lobiko.sessiondiscussion')),
                ('ordonnance', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='lobiko.ordonnance')),
            ],
            options={
                'verbose_name': 'Message de prescription',
                'verbose_name_plural': 'Messages de prescriptions',
            },
        ),
        migrations.CreateModel(
            name='PrescriptionMedicament',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('quantite', models.CharField(help_text='Quantité prescrite (ex: 1 boîte, 30 comprimés)', max_length=100)),
                ('posologie', models.TextField(help_text='Posologie détaillée')),
                ('duree_traitement', models.CharField(help_text='Durée du traitement', max_length=100)),
                ('instructions_specifiques', models.TextField(blank=True, help_text='Instructions spécifiques pour ce médicament')),
                ('avant_repas', models.BooleanField(default=False)),
                ('avec_repas', models.BooleanField(default=False)),
                ('apres_repas', models.BooleanField(default=False)),
                ('substitution_autorisee', models.BooleanField(default=True, help_text='Substitution par un générique autorisée')),
                ('ordonnance', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='prescriptions', to='lobiko.ordonnance')),
                ('produit', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='lobiko.produitpharmaceutique')),
            ],
            options={
                'verbose_name': 'Prescription de médicament',
                'verbose_name_plural': 'Prescriptions de médicaments',
            },
        ),
    ]
